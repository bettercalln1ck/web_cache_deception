

http{	

#	include /etc/nginx/mime.types;
#	 upstream app1backend {
#        	server 127.0.0.1:3000;
#    		}
	proxy_cache_path /tmp/nginx levels=1:2 keys_zone=my_zone:10m max_size=1000m inactive=600m;
#	proxy_cache_key "$scheme$request_method$host$request_uri";


	etag off;

        server {

        listen 8000 ;
		root /usr/src/app/public/;

		server_name example.com www.example.com;
		charset utf-8;
		
		proxy_set_header X-Real-IP  $remote_addr;
   		proxy_set_header X-Forwarded-For $remote_addr;
    		proxy_set_header X-Forwarded-Proto $scheme;
    		proxy_set_header Host $host;
   
#	location ~* .(ico|jpg|png|gif|jpeg|css|swf|js|woff)$ {
#        access_log off;
#        gzip_static on;
#        gzip_comp_level 5;
#        expires 1M;
#        proxy_cache my_zone;
#        add_header Cache-Control private;
#        add_header X-Proxy-Cache $upstream_cache_status;
#        # add_header Cache-Control public;
#        try_files $uri @proxy;
#               }
     

 location ~* .+\.(ico|jpg|gif|jpeg|css|js|flv|png|swf)$ {
 		add_header X-Proxy-Cache $upstream_cache_status;
		proxy_pass http://nodeserver:3000;		
		rewrite ^/(.*)$ /$1 break;
		expires 10m;
		proxy_cache my_zone;
		proxy_cache_key $host$uri#is_args$args;
		proxy_cache_methods GET HEAD POST;
		proxy_ignore_headers Expires Cache-Control Set-Cookie Vary;
		proxy_cache_valid 200 304 12h;
		proxy_cache_valid 302 301 12h;
		proxy_cache_valid any 1m;
		}

#	location / {
#				proxy_cache my_zone;
#        			add_header X-Proxy-Cache $upstream_cache_status;
#				include proxy_params;
#             		 proxy_pass http://127.0.0.1:3000;
 #          		}
	
# 	location @proxy {
#        proxy_pass http://127.0.0.1:3000;
#    }

    location ~  {
        proxy_pass http://nodeserver:3000;
    }


	}
}

events { }


